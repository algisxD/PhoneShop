@page "/detale/edit/{detaleId:int}"
@using PSAPI.Data.ViewModels
@using PSAPI.Data.Services
@using PSAPI.Data.Entities

@inject CommonService commonService
@inject NavigationManager navManager

<h1>Redaguoti detalę</h1>
<div class="@(selectedDetale is null ? "spinner" : null)"></div>
@if (selectedDetale is null || allTelefonoModeliai is null)
{
    <p>Loading...</p>
}
else
{
    <div class="editinimo-dalykas">
        <div>
            <h3>Pavadinimas</h3>
            <input type="text" class="form-control" spellcheck="false" @bind-value="selectedDetale.Pavadinimas" />
        </div>
        <div>
            <h3>Savikaina</h3>
            <input type="number" step="0.01" class="form-control" spellcheck="false" @bind-value="selectedDetale.Savikaina" />
        </div>
        <div>
            <h3>Pagaminimo Data</h3>
            <Radzen.Blazor.RadzenDatePicker TValue="DateTime" DateFormat="yyyy-MM-dd"
                                            Placeholder="Pagaminimo Data"
                                            ShowTime="false"
                                            @bind-Value="selectedDetale.PagaminimoData"></Radzen.Blazor.RadzenDatePicker>
        </div>
        <div>
            <h3>Kilmės šalis</h3>
            <input type="text" class="form-control" spellcheck="false" @bind-value="selectedDetale.KilmesSalis" />
        </div>
        <div>
            <h3>Serijos numeris</h3>
            <input type="text" class="form-control" spellcheck="false" @bind-value="selectedDetale.SerijosNumeris" />
        </div>
        <div>
            <h3>Telefono modelio ID</h3>
            <PSAPI.Pages.Components.UniversalDropDown Data="allTelefonoModeliai"
                                                      @bind-value="selectedDetale.TelefonoModelisId" TValue="int"
                                                      ColumnNames="@(new string[] { "Pavadinimas", "Gamintojas", "IsleidimoData" })">
            </PSAPI.Pages.Components.UniversalDropDown>
        </div>
        <div>
            <button @onclick="ConfirmEdit" class="btn btn-info">Patvirtinti koregavimą</button>
        </div>
    </div>

    if (showErrorMessage)
    {
        <div class="deleteModal" >
            <div class="modalheader">Klaida</div>
            <div class="modalcontent">Ne ne visi įvedimo laukai užpildyti...</div>
            <div class="modalfooter">
                <button @onclick="() => { showErrorMessage = false; }" class="btn btn-info">Gerai</button>
            </div>
        </div>
    }
}

@code {
    [Parameter]
    public int detaleId { get; set; }

    DetaleViewModel selectedDetale;

    IEnumerable<TelefonoModelisViewModel> allTelefonoModeliai;

    bool showErrorMessage;

    protected override async Task OnInitializedAsync()
    {
        selectedDetale = await commonService.GetDetaleAsync(navManager.BaseUri, detaleId);

        allTelefonoModeliai = await commonService.GetTelefonoModeliaiAsync(navManager.BaseUri);
    }

    protected bool Validate()
    {
        if (string.IsNullOrEmpty(selectedDetale.Pavadinimas) || string.IsNullOrEmpty(selectedDetale.KilmesSalis) || string.IsNullOrEmpty(selectedDetale.SerijosNumeris)
            || selectedDetale.PagaminimoData == DateTime.MinValue || selectedDetale.TelefonoModelisId == 0)
            return false;

        return true;
    }

    protected async Task ConfirmEdit()
    {
        if (Validate())
        {
            await commonService.UpdateDetaleAsync(navManager.BaseUri, FromViewModel());
            navManager.NavigateTo("/detales");
        }
        else
            showErrorMessage = true;
    }

    protected Detale FromViewModel()
    {
        return new Detale()
        {
            Id = selectedDetale.Id,
            KilmesSalis = selectedDetale.KilmesSalis,
            PagaminimoData = selectedDetale.PagaminimoData,
            Pavadinimas = selectedDetale.Pavadinimas,
            Savikaina = selectedDetale.Savikaina,
            SerijosNumeris = selectedDetale.SerijosNumeris,
            TelefonoModelisId = selectedDetale.TelefonoModelisId
        };
    }
}
